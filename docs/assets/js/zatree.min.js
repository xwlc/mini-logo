#!/usr/bin/env node
// SPDX-License-Identifier: GPL-3.0-only OR Apache-2.0 OR MIT
// SPDX-FileCopyrightText: 2024 Charles Wong <charlie-wong@outlook.com>
// Created By: Charles Wong 2024-07-07T02:58:21+08:00 Asia/Shanghai
// Repository: https://github.com/xwlc/xwlc.github.io
class ZATree{static#e(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}static#t=Math.PI/2;static#r(){const e=1-Math.random(),t=1-Math.random();return Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*t)}static#a(){return class{constructor(e,t,r,a){this.x=e,this.y=t,this.r=r,this.a=a}step(e,t,r){this.r-=r.diminish,this.x+=Math.cos(this.a)*r.stepSize,this.y+=Math.sin(this.a)*r.stepSize,this.a+=ZATree.#r()*r.angleMax*Math.pow(1+(e+t-this.r)/t,r.angleExp)}draw(e,t,r){const a=[Math.cos(this.a+ZATree.#t),Math.sin(this.a+ZATree.#t)],i=[Math.cos(this.a-ZATree.#t),Math.sin(this.a-ZATree.#t)],n=e=>e*this.r*r,l=a.map(n),s=i.map(n),o=(t,r)=>e.fillRect(t,r,1,1),h=(e,t,r)=>{const a=Math.hypot(e,t);for(let i=0;i<=r;i++){const r=n(a*Math.random()*Math.random()-1);o(e*r,t*r)}};e.save(),e.translate(this.x*r,this.y*r),e.beginPath(),e.moveTo(...l),e.lineTo(...s),e.stroke(),e.closePath();const d={L:t.dots*t.density[0],R:t.dots*t.density[1]};o(...l),h(...a,d.L),o(...s),h(...i,d.R),e.restore()}}}static#i(){return class{constructor(e,t,r,a,i,n){this.x=e,this.y=t,this.r=i.init,this.branch=r,this.square=n,this.pixel=1/n,this.grain=a,this.dice=i.dice,this.Q=[new(ZATree.#a())(e,t,i.init,-ZATree.#t)]}step(){for(let e=this.Q.length-1;e>=0;--e){const t=this.Q[e];t.step(this.pixel,this.r,this.branch.delta),t.r<=this.pixel?this.Q.splice(e,1):Math.random()<this.r-t.r+this.dice&&this.Q.push(new(ZATree.#a())(t.x,t.y,t.r*this.branch.dense,t.a+this.branch.angle*(2*Math.random()-1)))}}draw(e){for(const t of this.Q)t.draw(e,this.grain,this.square)}}}static#n(e,t){"number"!=typeof t&&(t=32);const r=1/e.width,a=ZATree.#e(10,50),i=ZATree.#e(10,50)/1e3;return{lineWidth:2,lineColor:"black",fillColor:"white",square:e.width,root:{x:.5,y:1},branch:{dense:.725,angle:Math.PI/4,delta:{stepSize:r,diminish:r/t,angleExp:2,angleMax:4*Math.PI/e.width}},grain:{dots:Math.ceil(e.width*i),density:[.18,.55]},ctrl:{init:1/t,dice:r*r*t*a}}}static draw(e,t={}){if(!e||!e.getContext)throw new Error("Could not get HTML <canvas> context");t={...ZATree.#n(e,t.magic),...t};const r=["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"],a=e.getContext("2d");if(a.lineWidth=t.lineWidth,t.randomColor){const e=ZATree.#e(0,r.length-1),t=ZATree.#e(0,r.length-1);a.fillStyle=r[e],a.strokeStyle=r[t]}else a.fillStyle=t.lineColor,a.strokeStyle=t.fillColor;const i=new(ZATree.#i())(t.root.x,t.root.y,t.branch,t.grain,t.ctrl,t.square);!function e(){i.Q.length>0&&(i.step(),i.draw(a),window.requestAnimationFrame(e))}()}}
